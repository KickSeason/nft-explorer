{"remainingRequest":"/Users/drei/Developer/nft-explorer/node_modules/babel-loader/lib/index.js!/Users/drei/Developer/nft-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/drei/Developer/nft-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drei/Developer/nft-explorer/src/components/TokenFoundry.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drei/Developer/nft-explorer/src/components/TokenFoundry.vue","mtime":1552355930953},{"path":"/Users/drei/Developer/nft-explorer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drei/Developer/nft-explorer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/drei/Developer/nft-explorer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drei/Developer/nft-explorer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport _parseInt from \"/Users/drei/Developer/nft-explorer/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      \"to_search_uri\": \"https://media.giphy.com/media/Wyt6sLEjKjaFjzybth/giphy.gif\",\n      \"loaded_uri\": \"\",\n      \"contract_hash\": \"5b9c51062ccd3c99346febb4fda31dbe506e92d9\",\n      \"contract_is_nft\": false,\n      \"recipient\": \"AafQxV6wQhtGYGYFboEyBjw3eMYNtBFW8J\"\n    };\n  },\n  methods: {\n    convertHexToString: function convertHexToString(hex) {\n      var str = '';\n\n      for (var i = 0; i < hex.length && hex.substr(i, 2) !== '00'; i += 2) {\n        str += String.fromCharCode(_parseInt(hex.substr(i, 2), 16));\n      }\n\n      return str;\n    },\n    displayURI: function displayURI() {\n      this.loaded_uri = this.to_search_uri;\n    },\n    buildSupportedStandardsRequest: function buildSupportedStandardsRequest() {\n      var supportedStandardsRequest = {\n        \"scriptHash\": this.contract_hash,\n        \"operation\": \"supportedStandards\",\n        \"args\": [],\n        \"network\": \"TestNet\"\n      };\n      console.log(supportedStandardsRequest);\n      return supportedStandardsRequest;\n    },\n    buildMintTokensRequest: function buildMintTokensRequest() {\n      var mintTokensRequest = {\n        \"scriptHash\": this.contract_hash,\n        \"operation\": \"mintToken\",\n        \"args\": [{\n          \"type\": \"ByteArray\",\n          \"value\": Neon.u.reverseHex(Neon.wallet.getScriptHashFromAddress(this.recipient))\n        }, {\n          \"type\": \"ByteArray\",\n          \"value\": \"00\"\n        }, {\n          \"type\": \"ByteArray\",\n          \"value\": Neon.u.str2hexstring(this.loaded_uri)\n        }],\n        \"network\": \"TestNet\",\n        \"fee\": \"0\"\n      };\n      return mintTokensRequest;\n    },\n    validateContract: function validateContract() {\n      console.log(\"attempting contract validation\");\n      var self = this;\n\n      if (this.contract_hash.length != 40) {\n        self.contract_is_nft = false;\n      } else {\n        var smartEcoRouter = new smartEco.SmartEcoRouter();\n        smartEcoRouter.start();\n        smartEcoRouter.invokeRead(self.buildSupportedStandardsRequest()).then(function (r) {\n          var deserialized = Neon.sc.StackItem.deserialize(r[\"stack\"][0][\"value\"]);\n          var supportedStandards = [];\n\n          for (var i = 0; i < deserialized[\"value\"].length; i++) {\n            supportedStandards.push(self.convertHexToString(deserialized[\"value\"][i][\"value\"]));\n          }\n\n          if (supportedStandards.includes(\"NEP-10\")) {\n            self.contract_is_nft = true;\n          }\n        }).catch(function (e) {\n          console.log(e);\n          self.contract_is_nft = false;\n        });\n      }\n    },\n    mintToken: function mintToken() {\n      var self = this;\n      var smartEcoRouter = new smartEco.SmartEcoRouter();\n      smartEcoRouter.start();\n      var r = self.buildMintTokensRequest();\n      console.log(r);\n      smartEcoRouter.invoke(r).then(function (r) {\n        console.log(r);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }\n};",{"version":3,"sources":["TokenFoundry.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div id=\"foundry\">\n    <div class=\"row mt-5\">\n        <div class=\"col col-md-6 mx-auto\">\n            <h6>Select An NFT Contract</h6>\n            <div class=\"input-group mb-3\">\n                <input v-model=\"contract_hash\" placeholder=\"URI for image\" aria-label=\"NEO address\" aria-describedby=\"basic-addon2\" class=\"form-control\">\n                <div class=\"input-group-append\">\n                    <button type=\"button\" v-on:click=\"validateContract\" class=\"btn btn-primary btn-o3-primary\">\n                        Validate\n                    </button>\n                </div>\n            </div>\n            <div class=\"alert alert-danger\" v-if=\"contract_is_nft == false\">This is an invalid NFT contract</div>\n            <div class=\"alert alert-success\" v-if=\"contract_is_nft\">This a a valid NFT contract</div>\n        </div>\n    </div>\n\n    <div class=\"row mt-5\">\n        <div class=\"col col-md-6 mx-auto\">\n            <h6>Upload Resource</h6>\n            <div class=\"input-group mb-3\">\n                <input v-model=\"to_search_uri\" placeholder=\"URI for image\" aria-label=\"NEO address\" aria-describedby=\"basic-addon2\" class=\"form-control\">\n                <div class=\"input-group-append\">\n                    <button type=\"button\" v-on:click=\"displayURI\" class=\"btn btn-primary btn-o3-primary\">\n                        Upload\n                    </button>\n                </div>\n            </div>\n            <img v-bind:src=\"loaded_uri\" height=\"100px\"/>\n        </div>\n    </div>\n    <div class=\"row mt-5\">\n        <div class=\"col col-md-6 mx-auto\">\n            <h6>Select The Recipient Address</h6>\n            <div class=\"input-group mb-3\">\n                <input v-model=\"recipient\" placeholder=\"Recipient Address\" aria-label=\"NEO address\" aria-describedby=\"basic-addon2\" class=\"form-control\">\n            </div>\n        </div>\n    </div>\n    <div class=\"row mt-5\">\n        <button type=\"button\" v-on:click=\"mintToken\" class=\"btn btn-primary btn-o3-primary\">\n            Mint Token\n        </button>\n    </div>        \n</div>\n</template>\n\n<script>\nexport default {\n    data: function () {\n        return {\n            \"to_search_uri\": \"https://media.giphy.com/media/Wyt6sLEjKjaFjzybth/giphy.gif\",\n            \"loaded_uri\": \"\",\n            \"contract_hash\": \"5b9c51062ccd3c99346febb4fda31dbe506e92d9\",\n            \"contract_is_nft\": false,\n            \"recipient\": \"AafQxV6wQhtGYGYFboEyBjw3eMYNtBFW8J\"\n        }\n    }, \n    methods:{\n        convertHexToString(hex) {\n    \t\t\tvar str = '';\n    \t\t\tfor (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\n        \t\t\tstr += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n                return str;\n                },\n        displayURI() {\n            this.loaded_uri = this.to_search_uri\n        }, \n        buildSupportedStandardsRequest() {\n            var supportedStandardsRequest = { \"scriptHash\": this.contract_hash,\n                \"operation\": \"supportedStandards\",\n                \"args\": []  ,\n                \"network\": \"TestNet\"\n            }\n            console.log(supportedStandardsRequest)\n            return supportedStandardsRequest\n        },\n        buildMintTokensRequest() {\n            var mintTokensRequest = { \"scriptHash\": this.contract_hash,\n                \"operation\": \"mintToken\",\n                \"args\": [\n                    {\"type\": \"ByteArray\", \"value\": Neon.u.reverseHex(Neon.wallet.getScriptHashFromAddress(this.recipient))},\n                    {\"type\": \"ByteArray\", \"value\": \"00\"},\n                    {\"type\": \"ByteArray\", \"value\": Neon.u.str2hexstring(this.loaded_uri)}\n                ],\n                \"network\": \"TestNet\",\n                \"fee\": \"0\"\n            } \n            return mintTokensRequest\n        },\n        validateContract() {\n            console.log(\"attempting contract validation\")\n            var self = this\n            if (this.contract_hash.length != 40) {\n                self.contract_is_nft = false\n            } else {\n                var smartEcoRouter = new smartEco.SmartEcoRouter()\n                smartEcoRouter.start()\n                smartEcoRouter.invokeRead(self.buildSupportedStandardsRequest())\n                .then(function(r) {\n                    var deserialized = Neon.sc.StackItem.deserialize(r[\"stack\"][0][\"value\"])\n                    var supportedStandards = []\n                    for (var i = 0; i < deserialized[\"value\"].length; i++) {\n                        supportedStandards.push(self.convertHexToString(deserialized[\"value\"][i][\"value\"]))\n                    }\n                    if (supportedStandards.includes(\"NEP-10\")) {\n                        self.contract_is_nft = true\n                    }\n                })\n                .catch(function(e) {\n                    console.log(e)\n                    self.contract_is_nft = false\n                })                        \n            }\n        },\n        mintToken() {\n            var self = this\n            var smartEcoRouter = new smartEco.SmartEcoRouter()\n            smartEcoRouter.start()\n            var r = self.buildMintTokensRequest()\n            console.log(r)\n            smartEcoRouter.invoke(r)\n            .then(function(r) {\n                console.log(r)\n            })\n            .catch(function(e) {\n                console.log(e)\n            })\n        }\n    }\n}\n</script>\n"],"sourceRoot":"src/components"}]}