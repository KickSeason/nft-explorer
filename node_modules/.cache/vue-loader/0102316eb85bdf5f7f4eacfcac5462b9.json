{"remainingRequest":"/Users/drei/Developer/nft-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drei/Developer/nft-explorer/src/components/NFTExplorer/NFTExplorer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drei/Developer/nft-explorer/src/components/NFTExplorer/NFTExplorer.vue","mtime":1552293678911},{"path":"/Users/drei/Developer/nft-explorer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drei/Developer/nft-explorer/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/drei/Developer/nft-explorer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/drei/Developer/nft-explorer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\timport NFTCard from './NFTCard.vue'\n\t\n\texport default {\n\t\tcomponents: {\n\t\t\tNFTCard\n\t\t},\n\t\tdata: function () {\n\t\t\treturn {\n\t\t\t\tsearch_value:\"ef26427f9eaeed31c57884dbbc2bda5de7b5dab8\",\n\t\t\t\tcontract_hash: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\ttoken_id: 0,\n\t\t\t\timage_url:\"\",\n\t\t\t\ttotalSupply: 0,\n\t\t\t\t//Known Contracts should probably be parsed out into a server side method\n\t\t\t\tknown_contracts: [\"ef26427f9eaeed31c57884dbbc2bda5de7b5dab8\"],\n\t\t\t\ttokens:[]\n\t\t\t}\n\t\t}, \n\t\tmethods:{\n\t\t\tbuildURIRequest(id, contract) {\n\t\t\t\tvar uriRequest = {\n\t\t\t\t\t\t\"scriptHash\": contract,\n  \t\t\t\t\t\t\"operation\": \"uri\",\n  \t\t\t\t\t\t\"args\": [\n    \t\t\t\t\t\t{\n      \t\t\t\t\t\t\t\"type\": 'Integer',\n      \t\t\t\t\t\t\t\"value\": parseInt(id, 10)\n      \t\t\t\t\t\t}\n  \t\t\t\t\t\t],\n  \t\t\t\t\t\t\"network\": \"TestNet\"\n\t\t\t\t\t}\n\t\t\t\treturn uriRequest\n\t\t\t},\n\n\t\t\tbuildOwnerOfRequest(id, contract) {\n\t\t\t\tvar ownerRequest = {\n\t\t\t\t\t\t\"scriptHash\": contract,\n\t\t\t\t\t\t\"operation\": \"ownerOf\",\n\t\t\t\t\t\t\"args\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": 'Integer',\n\t\t\t\t\t\t\t\t\"value\": parseInt(id, 10)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"network\": \"TestNet\"\n\t\t\t\t\t}\n\t\t\t\treturn ownerRequest\n\t\t\t},\n\n\t\t\tbuildTotalSupplyRequest() {\n\t\t\t\tvar totalSupplyRequest = {\n\t\t\t\t\t\t\"scriptHash\": this.contract_hash,\n\t\t\t\t\t\t\"operation\": \"totalSupply\",\n\t\t\t\t\t\t\"args\": [],\n\t\t\t\t\t\t\"network\": \"TestNet\"\n\t\t\t\t\t}\n\t\t\t\treturn totalSupplyRequest\n\t\t\t},\n\t\t\t\n\t\t\tbuildGetTokensOfOwnerRequest(scriptHash) {\n\t\t\t\tvar tokensOfOwnerRequest = {\n\t\t\t\t\t\"scriptHash\": scriptHash,\n\t\t\t\t\t\t\"operation\": \"tokensOfOwner\",\n\t\t\t\t\t\t\"args\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": 'ByteArray',\n\t\t\t\t\t\t\t\t\"value\": Neon.u.reverseHex(Neon.wallet.getScriptHashFromAddress(this.address))\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\"type\": \"Integer\",\n\t\t\t\t\t\t\t\t\"value\": 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\"network\": \"TestNet\"\n\t\t\t\t}\n\t\t\t\treturn tokensOfOwnerRequest\n\t\t\t},\n\n\t\t\tconvertHexToString(hex) {\n    \t\t\tvar str = '';\n    \t\t\tfor (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\n        \t\t\tstr += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    \t\t\treturn str;\n\t\t\t},\n\t\t\t\n\t\t\tloadAllTokensForAddress() {\n\t\t\t\tvar self = this\n\t\t\t\tvar smartEcoRouter = new smartEco.SmartEcoRouter()\n\t\t\t\tsmartEcoRouter.start()\n\n\t\t\t\tthis.tokens = []\n\t\t\t\tfor (var i = 0; i < this.known_contracts.length; i++) {\n\t\t\t\t\tvar req = self.buildGetTokensOfOwnerRequest(self.known_contracts[i])\n\t\t\t\t\tPromise.all([smartEcoRouter.invokeRead(req), Promise.resolve(self.known_contracts[i])])\n\t\t\t\t\t\t.then(function(values) {\n\t\t\t\t\t\t\tvar r = values[0]\n\t\t\t\t\t\t\tvar contract = values[1]\n\t\t\t\t\t\t\tvar deserialized = Neon.sc.StackItem.deserialize(r[\"stack\"][0][\"value\"])\n\t\t\t\t\t\t\tfor (i=0; i< deserialized[\"value\"].length; i++) {\n\t\t\t\t\t\t\t\tvar id = parseInt(deserialized[\"value\"][i][\"value\"][\"value\"], 16)\n\t\t\t\t\t\t\t\tvar uriRequest = self.buildURIRequest(id, contract)\n\t\t\t\t\t\t\t\tvar ownerRequest = self.buildOwnerOfRequest(id, contract)\t\n\t\t\t\t\t\t\t\tPromise.all([smartEcoRouter.invokeRead(uriRequest), smartEcoRouter.invokeRead(ownerRequest),Promise.resolve(id), Promise.resolve(contract)])\n\t\t\t\t\t\t\t\t\t.then(function(values) {\n\t\t\t\t\t\t\t\t\t\tvar uri = self.convertHexToString(values[0][\"stack\"][0][\"value\"])\n\t\t\t\t\t\t\t\t\t\tvar owner = self.convertHexToString(values[1][\"stack\"][0][\"value\"])\n\t\t\t\t\t\t\t\t\t\tself.tokens.push ({\n\t\t\t\t\t\t\t\t\t\t\t\"token_id\": values[2],\n\t\t\t\t\t\t\t\t\t\t\t\"uri\": uri,\n\t\t\t\t\t\t\t\t\t\t\t\"owner\": Neon.wallet.getAddressFromScriptHash(Neon.u.reverseHex(values[1][\"stack\"][0][\"value\"])),\n\t\t\t\t\t\t\t\t\t\t\t\"contract\": contract\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\t\t\t\t\t//handle error\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\t\t//handle error\n\t\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tloadAllTokensForContract() {\n\t\t\t\tvar self = this\n\t\t\t\tvar smartEcoRouter = new smartEco.SmartEcoRouter()\n\t\t\t\tsmartEcoRouter.start()\n\t\t\t\tthis.tokens = []\n\t\t\t\tself.totalSupply = 0\n\t\t\t\tsmartEcoRouter.invokeRead(self.buildTotalSupplyRequest())\n\t\t\t\t\t.then(function(r) {\n\t\t\t\t\t\tself.totalSupply = parseInt(r[\"stack\"][0][\"value\"], 16)\n\t\t\t\t\t\tfor (var i=1; i< self.totalSupply + 1; i++) {\n\t\t\t\t\t\t\tvar uriRequest = self.buildURIRequest(i, self.contract_hash)\n\t\t\t\t\t\t\tvar ownerRequest = self.buildOwnerOfRequest(i, self.contract_hash)\t\n\n\t\t\t\t\t\t\tPromise.all([smartEcoRouter.invokeRead(uriRequest), smartEcoRouter.invokeRead(ownerRequest), Promise.resolve(i)])\n\t\t\t\t\t\t\t\t.then(function(values) {\n\t\t\t\t\t\t\t\t\tvar uri = self.convertHexToString(values[0][\"stack\"][0][\"value\"])\n\t\t\t\t\t\t\t\t\tvar owner = self.convertHexToString(values[1][\"stack\"][0][\"value\"])\n\t\t\t\t\t\t\t\t\tself.tokens.push ({\n\t\t\t\t\t\t\t\t\t\t\"token_id\": values[2],\n\t\t\t\t\t\t\t\t\t\t\"uri\": uri,\n\t\t\t\t\t\t\t\t\t\t\"owner\": Neon.wallet.getAddressFromScriptHash(Neon.u.reverseHex(values[1][\"stack\"][0][\"value\"])),\n\t\t\t\t\t\t\t\t\t\t\"contract\": self.contract_hash\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tconsole.log(self.tokens)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\t\t\t\t//handle error\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\t//handle error\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\tsearchForValue() {\n\t\t\t\tif (Neon.wallet.isAddress(this.search_value)) {\n\t\t\t\t\tthis.address = this.search_value\n\t\t\t\t\tthis.loadAllTokensForAddress()\n\t\t\t\t} else {\n\t\t\t\t\tthis.contract_hash = this.search_value\n\t\t\t\t\tthis.loadAllTokensForContract()\n\t\t\t\t}\n\t\t\t},\n\t\t}, \n\t};\n",{"version":3,"sources":["NFTExplorer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NFTExplorer.vue","sourceRoot":"src/components/NFTExplorer","sourcesContent":["<template>\n<div id=\"explorer\">\n\t<div class=\"row mt-5\">\n\t\t<div class=\"col-6 mx-auto text-center\">\n\t\t\tWelcome to O3â€™s Non fungible token (NFT) explorer and minter.\n\t\t\tTo get started, please make sure you have O3 desktop wallet installed and <a href=\"https://www.o3.network\">set to TestNet</a>.\n\t\t</div>\n\t</div>\n    <div class=\"row mt-3 mb-4\">\n\t\t<div class=\"col col-md-6 mx-auto\">\n\t\t\t<div class=\"input-group mb-1\">\n\t\t\t\t<input v-model=\"search_value\" placeholder=\"Contract or User Address\" aria-label=\"NEO address\" aria-describedby=\"basic-addon2\" class=\"form-control\">\n\t\t\t\t<div class=\"input-group-append\">\n\t\t\t\t\t<button type=\"button\" v-on:click=\"searchForValue\" class=\"btn btn-primary btn-o3-primary\">\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<section class=\"container\">\n\t\t<div class=\"text-center success-message mb-4\"> \n\t\t\t\tContract Loaded {{ totalSupply }} NFT's Found\n\t\t</div>\n\n\t\t<div class=\"row row-grid d-lg-flex\">\n\t\t\t<div class=\"col-sm-6 col-lg-4 mb-lg-4\" v-for=\"nft in tokens\" :key=\"nft.token_id\">\n\t\t\t\t<NFTCard :token_id=\"nft.token_id\" :owner=\"nft.owner\" :uri=\"nft.uri\" :contract=\"nft.contract\"></NFTCard>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"d-flex justify-content-center\">\n\t\t\t<nav aria-label=\"Token Paging\">\n\t\t\t\t<ul class=\"pagination\">\n\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"#\">Previous</a></li>\n\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\n\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li>\n\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\n\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"#\">Next</a></li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</div>\n    </section>\n\n\t\t\n\t\t\n\t\t<section class=\"container\"> \n\t\t\t\t<img class=\"mx-auto d-block\" src=\"<%= BASE_URL %>../../ConfusedLuna.png\" />\n\t\t\t\t<div class=\"col-6 mx-auto text-center\">\n\t\t\t\t\t<div class=\"landing-info mb-1\">Don't know any NFT addresses or contracts? Check these out!</div>\n\t\t\t\t\t<div class=\"landing-info mb-1\">O3 Meme Vault (abc123)</div>\n\t\t\t\t\t<div class=\"landing-info mb-1\">O3 Foundry (abc123)</div>\n\t\t\t\t\t<div class=\"landing-info mb-1\">Or mint your own tokens in the O3 Foundry</div>\n\t\t\t\t</div>\n\t</section>\n</div>\n</template>\n\n<script type=\"text/javascript\">\n\timport NFTCard from './NFTCard.vue'\n\t\n\texport default {\n\t\tcomponents: {\n\t\t\tNFTCard\n\t\t},\n\t\tdata: function () {\n\t\t\treturn {\n\t\t\t\tsearch_value:\"ef26427f9eaeed31c57884dbbc2bda5de7b5dab8\",\n\t\t\t\tcontract_hash: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\ttoken_id: 0,\n\t\t\t\timage_url:\"\",\n\t\t\t\ttotalSupply: 0,\n\t\t\t\t//Known Contracts should probably be parsed out into a server side method\n\t\t\t\tknown_contracts: [\"ef26427f9eaeed31c57884dbbc2bda5de7b5dab8\"],\n\t\t\t\ttokens:[]\n\t\t\t}\n\t\t}, \n\t\tmethods:{\n\t\t\tbuildURIRequest(id, contract) {\n\t\t\t\tvar uriRequest = {\n\t\t\t\t\t\t\"scriptHash\": contract,\n  \t\t\t\t\t\t\"operation\": \"uri\",\n  \t\t\t\t\t\t\"args\": [\n    \t\t\t\t\t\t{\n      \t\t\t\t\t\t\t\"type\": 'Integer',\n      \t\t\t\t\t\t\t\"value\": parseInt(id, 10)\n      \t\t\t\t\t\t}\n  \t\t\t\t\t\t],\n  \t\t\t\t\t\t\"network\": \"TestNet\"\n\t\t\t\t\t}\n\t\t\t\treturn uriRequest\n\t\t\t},\n\n\t\t\tbuildOwnerOfRequest(id, contract) {\n\t\t\t\tvar ownerRequest = {\n\t\t\t\t\t\t\"scriptHash\": contract,\n\t\t\t\t\t\t\"operation\": \"ownerOf\",\n\t\t\t\t\t\t\"args\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": 'Integer',\n\t\t\t\t\t\t\t\t\"value\": parseInt(id, 10)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"network\": \"TestNet\"\n\t\t\t\t\t}\n\t\t\t\treturn ownerRequest\n\t\t\t},\n\n\t\t\tbuildTotalSupplyRequest() {\n\t\t\t\tvar totalSupplyRequest = {\n\t\t\t\t\t\t\"scriptHash\": this.contract_hash,\n\t\t\t\t\t\t\"operation\": \"totalSupply\",\n\t\t\t\t\t\t\"args\": [],\n\t\t\t\t\t\t\"network\": \"TestNet\"\n\t\t\t\t\t}\n\t\t\t\treturn totalSupplyRequest\n\t\t\t},\n\t\t\t\n\t\t\tbuildGetTokensOfOwnerRequest(scriptHash) {\n\t\t\t\tvar tokensOfOwnerRequest = {\n\t\t\t\t\t\"scriptHash\": scriptHash,\n\t\t\t\t\t\t\"operation\": \"tokensOfOwner\",\n\t\t\t\t\t\t\"args\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": 'ByteArray',\n\t\t\t\t\t\t\t\t\"value\": Neon.u.reverseHex(Neon.wallet.getScriptHashFromAddress(this.address))\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\"type\": \"Integer\",\n\t\t\t\t\t\t\t\t\"value\": 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\"network\": \"TestNet\"\n\t\t\t\t}\n\t\t\t\treturn tokensOfOwnerRequest\n\t\t\t},\n\n\t\t\tconvertHexToString(hex) {\n    \t\t\tvar str = '';\n    \t\t\tfor (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\n        \t\t\tstr += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    \t\t\treturn str;\n\t\t\t},\n\t\t\t\n\t\t\tloadAllTokensForAddress() {\n\t\t\t\tvar self = this\n\t\t\t\tvar smartEcoRouter = new smartEco.SmartEcoRouter()\n\t\t\t\tsmartEcoRouter.start()\n\n\t\t\t\tthis.tokens = []\n\t\t\t\tfor (var i = 0; i < this.known_contracts.length; i++) {\n\t\t\t\t\tvar req = self.buildGetTokensOfOwnerRequest(self.known_contracts[i])\n\t\t\t\t\tPromise.all([smartEcoRouter.invokeRead(req), Promise.resolve(self.known_contracts[i])])\n\t\t\t\t\t\t.then(function(values) {\n\t\t\t\t\t\t\tvar r = values[0]\n\t\t\t\t\t\t\tvar contract = values[1]\n\t\t\t\t\t\t\tvar deserialized = Neon.sc.StackItem.deserialize(r[\"stack\"][0][\"value\"])\n\t\t\t\t\t\t\tfor (i=0; i< deserialized[\"value\"].length; i++) {\n\t\t\t\t\t\t\t\tvar id = parseInt(deserialized[\"value\"][i][\"value\"][\"value\"], 16)\n\t\t\t\t\t\t\t\tvar uriRequest = self.buildURIRequest(id, contract)\n\t\t\t\t\t\t\t\tvar ownerRequest = self.buildOwnerOfRequest(id, contract)\t\n\t\t\t\t\t\t\t\tPromise.all([smartEcoRouter.invokeRead(uriRequest), smartEcoRouter.invokeRead(ownerRequest),Promise.resolve(id), Promise.resolve(contract)])\n\t\t\t\t\t\t\t\t\t.then(function(values) {\n\t\t\t\t\t\t\t\t\t\tvar uri = self.convertHexToString(values[0][\"stack\"][0][\"value\"])\n\t\t\t\t\t\t\t\t\t\tvar owner = self.convertHexToString(values[1][\"stack\"][0][\"value\"])\n\t\t\t\t\t\t\t\t\t\tself.tokens.push ({\n\t\t\t\t\t\t\t\t\t\t\t\"token_id\": values[2],\n\t\t\t\t\t\t\t\t\t\t\t\"uri\": uri,\n\t\t\t\t\t\t\t\t\t\t\t\"owner\": Neon.wallet.getAddressFromScriptHash(Neon.u.reverseHex(values[1][\"stack\"][0][\"value\"])),\n\t\t\t\t\t\t\t\t\t\t\t\"contract\": contract\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\t\t\t\t\t//handle error\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\t\t//handle error\n\t\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tloadAllTokensForContract() {\n\t\t\t\tvar self = this\n\t\t\t\tvar smartEcoRouter = new smartEco.SmartEcoRouter()\n\t\t\t\tsmartEcoRouter.start()\n\t\t\t\tthis.tokens = []\n\t\t\t\tself.totalSupply = 0\n\t\t\t\tsmartEcoRouter.invokeRead(self.buildTotalSupplyRequest())\n\t\t\t\t\t.then(function(r) {\n\t\t\t\t\t\tself.totalSupply = parseInt(r[\"stack\"][0][\"value\"], 16)\n\t\t\t\t\t\tfor (var i=1; i< self.totalSupply + 1; i++) {\n\t\t\t\t\t\t\tvar uriRequest = self.buildURIRequest(i, self.contract_hash)\n\t\t\t\t\t\t\tvar ownerRequest = self.buildOwnerOfRequest(i, self.contract_hash)\t\n\n\t\t\t\t\t\t\tPromise.all([smartEcoRouter.invokeRead(uriRequest), smartEcoRouter.invokeRead(ownerRequest), Promise.resolve(i)])\n\t\t\t\t\t\t\t\t.then(function(values) {\n\t\t\t\t\t\t\t\t\tvar uri = self.convertHexToString(values[0][\"stack\"][0][\"value\"])\n\t\t\t\t\t\t\t\t\tvar owner = self.convertHexToString(values[1][\"stack\"][0][\"value\"])\n\t\t\t\t\t\t\t\t\tself.tokens.push ({\n\t\t\t\t\t\t\t\t\t\t\"token_id\": values[2],\n\t\t\t\t\t\t\t\t\t\t\"uri\": uri,\n\t\t\t\t\t\t\t\t\t\t\"owner\": Neon.wallet.getAddressFromScriptHash(Neon.u.reverseHex(values[1][\"stack\"][0][\"value\"])),\n\t\t\t\t\t\t\t\t\t\t\"contract\": self.contract_hash\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tconsole.log(self.tokens)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\t\t\t\t//handle error\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\t//handle error\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\tsearchForValue() {\n\t\t\t\tif (Neon.wallet.isAddress(this.search_value)) {\n\t\t\t\t\tthis.address = this.search_value\n\t\t\t\t\tthis.loadAllTokensForAddress()\n\t\t\t\t} else {\n\t\t\t\t\tthis.contract_hash = this.search_value\n\t\t\t\t\tthis.loadAllTokensForContract()\n\t\t\t\t}\n\t\t\t},\n\t\t}, \n\t};\n</script>\n\n<style>\n .landing-info {\n\tcolor: #000000;\n\tfont-size: 12px;\n\ttext-align: center;\n}\n\n.success-message {\n\tcolor: #7ED321;\n\tfont-size: 18px;\n\tfont-weight: bold;\n}\n\n</style>\n"]}]}